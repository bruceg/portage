#!/usr/bin/python
import os
import sys

vars = { }
for var in os.popen('emerge --info', 'r').readlines():
	try: name,value = var.rstrip().split('=', 1)
	except: continue
	if value[0] == value[-1]:
		value = value[1:-1]
	vars[name] = value

def listdir(dir):
	listing = os.listdir(dir)
	listing.sort()
	return [ os.path.join(dir, filename) for filename in listing ]

def msg(s):
	sys.stderr.write(s)
	sys.stderr.write('\n')
	sys.stderr.flush()

files = { }

cachedir = os.path.join(vars.get('PORTDIR', '/usr/portage'), 'metadata', 'cache')
distdir = vars.get('DISTDIR', '/usr/portage/distfiles')
overlays = vars.get('PORTDIR_OVERLAY', '')

msg("Scanning %s..."%cachedir)

for cat in listdir(cachedir):
	for pkg in listdir(cat):
		for file in open(pkg).readlines()[3].strip().split(' '):
			files[os.path.basename(file)] = None


def scan_digest(path):
	try:
		file = open(path).readlines()
	except:
		return
	for line in file:
		try:
			files[line.split(' ')[2]] = None
		except:
			pass

def scan_portdir(dir):
	msg("Scanning %s..."%dir)
	for cat in listdir(dir):
		if os.path.isdir(cat):
			for pkg in listdir(cat):
				filesdir = os.path.join(pkg, 'files')
				if os.path.isdir(filesdir):
					for digest in listdir(filesdir):
						scan_digest(digest)

for overlay in overlays.split(' '):
	if overlay:
		scan_portdir(overlay)

for file in os.listdir(distdir):
	if not files.has_key(file):
		path = os.path.join(distdir, file)
		if os.path.isfile(path):
			print path

