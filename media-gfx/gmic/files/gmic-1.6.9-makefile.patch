--- Makefile.orig	2016-02-17 23:19:51.342895105 +0200
+++ Makefile	2016-02-17 23:19:46.731837650 +0200
@@ -103,7 +103,6 @@
 ifndef NO_SRIPDLIB
 MANDATORY_CFLAGS += -std=c++11
 endif
-MANDATORY_LIBS += -L$(USR)/$(LIB)
 ifeq ($(notdir $(CXX)),g++)
 MANDATORY_CFLAGS += -Wall -W
 MANDATORY_LIBS += -lm
@@ -164,14 +163,14 @@
 X11_CFLAGS = -Dcimg_display=0 -Dcimg_appname=\\\"gmic\\\" #-Dcimg_use_xrandr
 X11_LIBS = -lpthread #`pkg-config --libs xrandr || echo -lXrandr`
 else
-X11_CFLAGS = -Dcimg_display=1 -Dcimg_appname=\\\"gmic\\\" `pkg-config --cflags x11 || echo -I/usr/X11R6/include` #-Dcimg_use_xrandr
-X11_LIBS = -L/usr/X11R6/lib -lX11 -lpthread #`pkg-config --libs xrandr || echo -lXrandr`
+X11_CFLAGS = -Dcimg_display=1 -Dcimg_appname=\\\"gmic\\\" #-Dcimg_use_xrandr
+X11_LIBS = -lX11 -lpthread #-lXrandr
 endif
 endif
 # Flags to enable fast display, using XShm.
 # This requires the presence of the X11 extension include and library files.
-XSHM_CFLAGS = -Dcimg_use_xshm `pkg-config --cflags xcb-shm`
-XSHM_LIBS = `pkg-config --libs xcb-shm || echo -L$(USR)/X11R6/lib -lXext`
+XSHM_CFLAGS = -Dcimg_use_xshm
+XSHM_LIBS = -lXext
 
 # Flags to enable image display, using GDI32.
 # This requires the presence of the GDI32 include and library files.
@@ -205,8 +204,8 @@
 
 # Flags to enable native support for MINC2 image files, using the MINC2 library.
 # ( http://en.wikibooks.org/wiki/MINC/Reference/MINC2.0_Users_Guide )
-MINC2_CFLAGS = -Dcimg_use_minc2 -I${HOME}/local/include
-MINC2_LIBS = -lminc_io -lvolume_io2 -lminc2 -lnetcdf -lhdf5 -lz -L${HOME}/local/lib
+MINC2_CFLAGS = -Dcimg_use_minc2
+MINC2_LIBS = -lminc_io -lvolume_io2 -lminc2 -lnetcdf -lhdf5 -lz
 
 # Flags to enable native support for downloading files from the network.
 # ( http://curl.haxx.se/libcurl/ )
@@ -340,7 +339,6 @@
 
 cli:
 	$(MAKE) "CFLAGS+=$(STD_CLI_CFLAGS) $(OPT_CFLAGS)" "LIBS+=$(STD_CLI_LIBS)" gmic
-	$(STRIP) gmic$(EXE)
 
 cli_s:
 ifeq ($(OS),Darwin)
@@ -356,11 +354,9 @@
 
 gmicol:
 	$(MAKE) "CFLAGS+=$(STD_GMICOL_CFLAGS) $(OPT_CFLAGS)" "LIBS+=$(STD_GMICOL_LIBS)" gmic
-	$(STRIP) gmic$(EXE)
 
 static:
 	$(MAKE) "CFLAGS+=$(STATIC_CLI_CFLAGS) $(OPT_CFLAGS)" "LIBS+=$(STATIC_CLI_LIBS)" gmic
-	$(STRIP) gmic$(EXE)
 
 debug:
 	$(MAKE) "CFLAGS+=$(STD_CLI_CFLAGS) $(DEBUG_CFLAGS)" "LIBS+=$(STD_CLI_LIBS)" gmic
@@ -376,13 +372,12 @@
 libgmic.o: gmic.cpp gmic.h gmic_stdlib.h CImg.h
 	$(CXX) -o libgmic.o -c gmic.cpp -fPIC $(CFLAGS)
 
-libgmic: libgmic.o gmic_use_lib.cpp
-	ar rcs libgmic.a libgmic.o
+libgmic: libgmic.o
+	$(AR) rcs libgmic.a libgmic.o
 ifeq ($(OS),Darwin)
-	$(CXX) -shared -o libgmic.so libgmic.o $(LIBS)
+	$(CXX) $(LDFLAGS) -shared -o libgmic.so libgmic.o $(LIBS)
 else
-	$(CXX) -shared -Wl,-soname,libgmic.so.1 -o libgmic.so libgmic.o $(LIBS)
-	$(CXX) -o gmic_use_lib gmic_use_lib.cpp -L. -lgmic
+	$(CXX) $(LDFLAGS) -shared -Wl,-soname,libgmic.so.1 -o libgmic.so libgmic.o $(LIBS)
 endif
 
 gmic_gimp.o: gmic.cpp gmic.h gmic_stdlib.h CImg.h
@@ -396,12 +391,11 @@
 	$(CXX) -o gmic_gimp gmic_gimp.cpp gmic_gimp.o -Dgmic_gimp `gimptool-2.0$(EXE) --cflags` $(CFLAGS) $(subst /opt/local,/tmp/skl/Gimp.app/Contents/Resources,$(shell gimptool-2.0$(EXE) --libs) $(LIBS))
 endif
 else
-	$(CXX) -o gmic_gimp gmic_gimp.cpp gmic_gimp.o -Dgmic_gimp `gimptool-2.0$(EXE) --cflags` $(CFLAGS) `gimptool-2.0$(EXE) --libs` $(LIBS)
+	$(CXX) -o gmic_gimp gmic_gimp.cpp gmic_gimp.o -Dgmic_gimp `gimptool-2.0$(EXE) --cflags` $(CFLAGS) $(LDFLAGS) `gimptool-2.0$(EXE) --libs` $(LIBS)
 endif
-	$(STRIP) gmic_gimp$(EXE)
 
 gmic: gmic.cpp gmic.h gmic_stdlib.h CImg.h
-	$(CXX) -o gmic gmic.cpp -Dgmic_main $(CFLAGS) $(LIBS)
+	$(CXX) -o gmic gmic.cpp -Dgmic_main $(CFLAGS) $(LDFLAGS) $(LIBS)
 
 gmic_stdlib.h:
 	@echo -n "> Retrieve G'MIC Standard Library..."
@@ -474,20 +468,23 @@
 # Generate bash completion script (requires 'gmic' to be installed first).
 bashcompletion:
 	@mkdir -p ../resources
-	@\gmic -v - gmic_stdlib.gmic raw:gmic_stdlib.gmic,uchar -document_gmic bash 2> ../resources/gmic_bashcompletion.sh
+	@./gmic -v - gmic_stdlib.gmic raw:gmic_stdlib.gmic,uchar -document_gmic bash 2> ../resources/gmic_bashcompletion.sh
 
 # Generate man page (requires 'gmic' to be installed first).
 man:
 	@mkdir -p ../man
-	@\gmic -v - gmic_stdlib.gmic raw:gmic_stdlib.gmic,uchar -__help man 2> ../man/gmic.1
-	@gzip -f ../man/gmic.1
+	@./gmic -v - gmic_stdlib.gmic raw:gmic_stdlib.gmic,uchar -__help man 2> ../man/gmic.1
 
 # Install/uninstall/clean procedures.
-install:
+install-gimp:
 	mkdir -p $(DESTDIR)$(PLUGINDIR)/
 	cp -f gmic_gimp $(DESTDIR)$(PLUGINDIR)/
+
+install-bin:
 	mkdir -p $(DESTDIR)$(USR)/$(BIN)/
 	cp -f gmic $(DESTDIR)$(USR)/$(BIN)/
+
+install-lib:
 	mkdir -p $(DESTDIR)$(USR)/$(INCLUDE)/
 	cp -f gmic.h $(DESTDIR)$(USR)/$(INCLUDE)/
 
@@ -497,15 +494,18 @@
 	cp -f libgmic.so $(DESTDIR)$(USR)/$(LIB)/libgmic.so.1.6.9
 	ln -fs libgmic.so.1.6.9 $(DESTDIR)$(USR)/$(LIB)/libgmic.so.1
 	ln -fs libgmic.so.1 $(DESTDIR)$(USR)/$(LIB)/libgmic.so
-	cp -f ../zart/zart $(DESTDIR)$(USR)/$(BIN)/
 endif
+
+install-zart:
+	cp -f ../zart/zart $(DESTDIR)$(USR)/$(BIN)/
+
+install-man:
 	mkdir -p $(DESTDIR)$(USR)/share/man/
 	mkdir -p $(DESTDIR)$(USR)/share/man/man1/
-	mkdir -p $(DESTDIR)$(USR)/share/man/fr/man1/
-	cp -f ../man/gmic.1.gz $(DESTDIR)$(USR)/share/man/man1/gmic.1.gz
-	cp -f ../man/gmic.1.gz $(DESTDIR)$(USR)/share/man/fr/man1/gmic.1.gz
+	cp -f ../man/gmic.1 $(DESTDIR)$(USR)/share/man/man1/gmic.1
+
+install-bash:
 	if [ -d /etc/bash_completion.d/ ]; then mkdir -p $(DESTDIR)/etc/bash_completion.d/; cp -f ../resources/gmic_bashcompletion.sh $(DESTDIR)/etc/bash_completion.d/gmic; fi
-	if [ -d /opt/local/etc/bash_completion.d/ ]; then mkdir -p $(DESTDIR)/opt/local/etc/bash_completion.d/; cp -f ../resources/gmic_bashcompletion.sh $(DESTDIR)/opt/local/etc/bash_completion.d/gmic; fi
 
 uninstall:
 	rm -f $(DESTDIR)$(USR)/$(BIN)/gmic
@@ -515,8 +515,7 @@
 	rm -f $(DESTDIR)$(USR)/$(LIB)/libgmic.so.1
 	rm -f $(DESTDIR)$(USR)/$(LIB)/libgmic.so
 	rm -rf $(DESTDIR)$(USR)/share/doc/gmic/
-	rm -f $(DESTDIR)$(USR)/share/man/man1/gmic.1.gz
-	rm -f $(DESTDIR)$(USR)/share/man/fr/man1/gmic.1.gz
+	rm -f $(DESTDIR)$(USR)/share/man/man1/gmic.1
 
 distclean: clean
 
